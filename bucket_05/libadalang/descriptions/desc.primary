Libadalang is a project to build a high performance semantic engine for
the Ada programming language. It is meant to provide a basis to write Ada
tooling, including tools working on potentially changing and incorrect
code, such as IDEs. Its goals encompass, but are not limited to:

* Full support for parsing the Ada 2012 syntax, plus SPARK extensions.
* Error tolerant parsing: the parser must be able to recover from simple
  errors and provide a "best-guess" tree.
* Error tolerant semantic analysis: it must be possible to create a tool
  that works only on syntax, and completely ignores semantic issues.
* Full symbol resolution respecting Ada 2012 - and prior - semantics.
* Bindings to a variety of languages, including Ada, C, Python and Java, so
  that tools can be written from various ecosystems. 
* Incremental processing of source files.
